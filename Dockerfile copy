FROM mcr.microsoft.com/dotnet/aspnet:5.0 AS base
WORKDIR /app
EXPOSE 5000

ENV ASPNETCORE_URLS=http://+:5000

RUN adduser -u 5678 --disabled-password --gecos "" appuser && chown -R appuser /app
USER appuser

FROM mcr.microsoft.com/dotnet/sdk:5.0 AS build
WORKDIR /src
COPY ["SINPRO.csproj", "./"]
RUN dotnet restore "SINPRO.csproj"
COPY . .
WORKDIR "/src/."
RUN dotnet build "SINPRO.csproj" -c Release -o /app/build

RUN export PATH="$PATH:/root/.dotnet/tools"

RUN cat << \EOF >> ~/.bash_profile \
        export PATH="$PATH:/$HOME/.dotnet/tools" \
    EOF


FROM mcr.microsoft.com/dotnet/core/sdk:3.1 AS build-env
ENV PATH $PATH:/root/.dotnet/tools
RUN dotnet tool install -g dotnet-ef --version 3.1.1


# # FROM mcr.microsoft.com/dotnet/sdk:6.0	
# FROM mcr.microsoft.com/dotnet/core/sdk:3.1-nanoserver-1903 AS migration
# WORKDIR /src
# COPY . .
# RUN dotnet restore "LearningAnalytics.Migration/LearningAnalytics.Migration.csproj"
# COPY . .
# WORKDIR "/src/LearningAnalytics.Migration"
# RUN dotnet build "LearningAnalytics.Migration.csproj" -c Release -o /app/migration
# FROM build AS publish
# RUN dotnet publish "LearningAnalytics.API.csproj" -c Release -o /app/publish
# FROM base AS final
# WORKDIR /migration
# COPY --from=migration /app/migration .
# WORKDIR /app
# COPY --from=publish /app/publish .
# ENTRYPOINT ["dotnet", "LearningAnalytics.API.dll"]

FROM build AS publish
RUN dotnet publish "SINPRO.csproj" -c Release -o /app/publish
FROM base AS final
WORKDIR /app
COPY --from=publish /app/publish .
ENTRYPOINT ["dotnet", "SINPRO.dll"]


# How to setup nginx reverse proxy for aspnet core apps with Docker compose