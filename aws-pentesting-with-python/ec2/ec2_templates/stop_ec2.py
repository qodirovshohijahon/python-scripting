import boto3
import json
import botocore
import os
from json_datetime_serializer import json_datetime_serializer
import logging
from moto import mock_ec2


logger = logging.getLogger()
logging.basicConfig(level=logging.INFO,
                    format='%(asctime)s: %(levelname)s: %(message)s')


# Stopping the instance using stop_instances.
# @mock_ec2
def stop_instances(instance_id):
    client = boto3.client('ec2')
    response = client.stop_instances(
            InstanceIds=[
                instance_id
            ]
    )
    instance_id = response['StoppingInstances'][0]['InstanceId'] 
    instance_stop_waiter = client.get_waiter('instance_stopped')
    try:
        instance_stop_waiter.wait(InstanceIds=[instance_id])
        logger.info(f'instance successfully stopped..with  instance-id: {instance_id}')

    except botocore.exceptions.WaiterError as e:
        if "Max attempts exceeded" in e.message:
            logger.info('Snapshot did not complete in 600 seconds..')
        else:
            logger.info(f'Message---{e.message}')

    return response['StoppingInstances'][0]['InstanceId']

    
# if __name__ == '__main__':
#     logger.info('EC2 Stopping function......!')
#     instance_id = input('Enter an instance id: ')   
#     ec2_stop = stop_instances(instance_id)
#     logger.info('Stopping ec2 instance...')
#     logger.info(
#         f'Stopping instance with details: {json.dumps(ec2_stop, indent=4, default=json_datetime_serializer)}'
#     )
#     logger.info('Done!')
    
        