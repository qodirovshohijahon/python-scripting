import boto3
import botocore
import boto3
import json
import logging
from moto import mock_ec2
from json_datetime_serializer import json_datetime_serializer

logger = logging.getLogger()
logging.basicConfig(level=logging.INFO,
                    format='%(asctime)s: %(levelname)s: %(message)s')


# @mock_ec2
def list_all_ec2_instances():
    client = boto3.resource('ec2')
    ec2_iterator = client.instances.all()
    for instance in ec2_iterator:
        # logger.info(instance.id)
        for ebs in instance.block_device_mappings:
            if ebs['DeviceName'] == instance.root_device_name:
                logger.info(f"The root volume is {ebs['Ebs']['VolumeId']}")
            else:
                logger.info(f"The additionale volume is {ebs['Ebs']['VolumeId']}")
    # try:
    #     detaching_volume_waiter.wait(VolumeIds=[detached_volume_id])
    #     logger.info(f'Volume successfully detached volume-id: {detached_volume_id}')

    # except botocore.exceptions.WaiterError as e:
    #     if "Max attempts exceeded" in e.message:
    #         logger.info('Detaching did not complete in 600 seconds..')
    #     else:
    #         logger.info(f'Message---{e.message}')

    # return detached_volume_id

    
if __name__ == '__main__':
    logger.info('Detaching volume function......!')
    ec2 = list_all_ec2_instances()
    logger.info(
        f'Instances with details: {json.dumps(ec2, indent=4, default=json_datetime_serializer)}'
    )
    logger.info('Done....!!!')
    
        
        


