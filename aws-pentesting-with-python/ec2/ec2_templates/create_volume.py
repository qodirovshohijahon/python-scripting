import resource
import boto3
import botocore
import os
from json_datetime_serializer import json_datetime_serializer
import logging
from moto import mock_ec2
from describe_ec2_instances import describe_instances
from create_snapshot import create_snapshot

logger = logging.getLogger()
logging.basicConfig(level=logging.INFO,
                    format='%(asctime)s: %(levelname)s: %(message)s')


# Creating Voume from EC2 Snapshot.

# @mock_ec2
def create_volume(volume_size, snapshot_id):
    client = boto3.client('ec2')
   
    response = client.create_volume(
        AvailabilityZone='us-east-1a',
        Size=volume_size,
        SnapshotId=snapshot_id,
        VolumeType='gp3',
    )
    volume_id = response['VolumeId']
    volume_in_use_waiter = client.get_waiter('volume_available')
    try:
        volume_in_use_waiter.wait(VolumeIds=[volume_id])
        logger.info(f'Volume successfully created..with  volume-id: {volume_id}')

    except botocore.exceptions.WaiterError as e:
        if "Max attempts exceeded" in e.message:
            logger.info('Snapshot did not complete in 600 seconds..')
        else:
            logger.info(f'Message---{e.message}')
            



# if __sname__ == '__main__':
#     logger.info('Creating Volume function......!')
#     instance_id = input('Enter an instance id: ')
#     volume_size = int(input('Enter volume size: '))
#     # logger.info(f'{type (volume_size)}')
#     ec2_volume = create_volume(instance_id, volume_size)
#     logger.info('Creating a snapshot ...')
#     logger.info(
#         f'Snapshot details: {json.dumps(ec2_volume, indent=4, default=json_datetime_serializer)}'
#     )
#     logger.info('Done!')
