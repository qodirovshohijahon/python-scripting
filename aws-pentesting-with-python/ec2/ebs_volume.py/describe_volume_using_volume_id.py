from http import client
import boto3
import json
import logging
import os
import botocore
import time
from json_datetime_serializer import json_datetime_serializer

logger = logging.getLogger()
logging.basicConfig(level=logging.INFO,
                    format='%(asctime)s: %(levelname)s: %(message)s')

def describe_volume():
    client = boto3.client('ec2')
    response = client.describe_volumes(
        VolumeIds=[
            "vol-058ce627d6f091052"
        ]
    )
    return response['Volumes'][0]


def modify_volumes(volume_id):
    client = boto3.client('ec2')
    response = client.modify_volume(
        VolumeId=volume_id,
        Size=35
    )
    return response

def check_modification_state(volume_id):
    client = boto3.client('ec2')
    response = client.describe_volumes_modifications(
        VolumeIds=[
            volume_id
        ]
    )
    while response['VolumesModifications'][0]['ModificationState'] == 'modifying':
        time.sleep(1)
        response = client.describe_volumes_modifications(
            VolumeIds=[
                volume_id
            ]
        )
        if response['VolumesModifications'][0]['ModificationState'] == 'optimizing':
            logger.info('Volume is being optimized...')
        elif response['VolumesModifications'][0]['ModificationState'] == 'completed':
            logger.info('Volume has been optimized...')
            break
        else:
            logger.info('Volume is being modified...')
    return response['VolumesModifications'][0]['ModificationState']

volume_info = describe_volume()
modify_volume = modify_volumes(volume_info['VolumeId'])
volume_state = check_modification_state(volume_info['VolumeId'])

logger.info(f'Volume description...\n{json.dumps(modify_volume["VolumeModification"], default=json_datetime_serializer, indent=4)}')
logger.info(f'Volume state...\n{json.dumps(volume_state, default=json_datetime_serializer, indent=4)}')
