from http import client
import boto3
import json
import logging
import os
import botocore
import time
from json_datetime_serializer import json_datetime_serializer

logger = logging.getLogger()
logging.basicConfig(level=logging.INFO,
                    format='%(asctime)s: %(levelname)s: %(message)s')

client = boto3.client('ec2')
instance_id = 'i-02a6b862997aa5bf6'


def describe_volume(instance_id):
    client = boto3.client('ec2')
    volume_id = client.describe_instances(
        InstanceIds=[
            instance_id,
        ]
    )
    response = client.describe_volumes(
        VolumeIds=[
            volume_id['Reservations'][0]['Instances'][0]['BlockDeviceMappings'][0]['Ebs']['VolumeId']
        ]
    )
    logger.info(f'Volume description...\n{json.dumps(response["Volumes"][0], default=json_datetime_serializer, indent=4)}')
    return response['Volumes'][0]

def get_modification_state(instance_id):
    client = boto3.client('ec2')
    volume = client.describe_instances(
        InstanceIds=[
            instance_id,
        ]
    )
    volume_id = volume['Reservations'][0]['Instances'][0]['BlockDeviceMappings'][0]['Ebs']['VolumeId']
    response = boto3.client('ec2').describe_volumes_modifications(
        VolumeIds=[
            volume_id
        ]
    )
    return response['VolumesModifications'][0]['ModificationState']

volume = client.describe_instances(
        InstanceIds=[
            instance_id,
        ]
    )
volume_id = volume['Reservations'][0]['Instances'][0]['BlockDeviceMappings'][0]['Ebs']['VolumeId']
describe_volume(instance_id)
modify_volume_response = client.modify_volume(
    VolumeId=volume_id,
    Size=55
)

while True:
    state = get_modification_state(volume_id)
    if state == 'completed' or state == None:
        describe_volume(instance_id)
        break
    elif state == 'failed':
        raise Exception('Failed to modify volume size')
    else:
        time.sleep(60)
        



# logger.info('Describe volume function......!')
# instance_id = 'i-0db03d4defe2f29c3'
# # input('Enter an instance id: ')   
# # ec2_volume = get_modification_state(instance_id)
# logger.info('Getting info ...')
# logger.info(
#     f'Volume details: {json.dumps(ec2_volume, indent=4, default=json_datetime_serializer)}'
# )
# logger.info('Done!')
