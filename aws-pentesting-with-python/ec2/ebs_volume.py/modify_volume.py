from http import client
import boto3
import json
import logging
import os
import botocore
import time

from pytest import Instance
from json_datetime_serializer import json_datetime_serializer

logger = logging.getLogger()
logging.basicConfig(level=logging.INFO,
                    format='%(asctime)s: %(levelname)s: %(message)s')


def modify_volumes(instance_id):
    client = boto3.client('ec2')
    volume = client.describe_instances(
        InstanceIds=[
            instance_id
        ]
    )
    volume_id = volume['Reservations'][0]['Instances'][0]['BlockDeviceMappings'][0]['Ebs']['VolumeId']
    response = client.modify_volume(
        VolumeId=volume_id,
        Size=40
    )
    logger.info(f'Volume description...\n{json.dumps(response["VolumeModification"], default=json_datetime_serializer, indent=4)}')
    return instance_id

def check_modification_state(instance_id):
    client = boto3.client('ec2')
    volume = client.describe_instances(
        InstanceIds=[
            instance_id
        ]
    )
    volume_id = volume['Reservations'][0]['Instances'][0]['BlockDeviceMappings'][0]['Ebs']['VolumeId']
    response = client.describe_volumes_modifications(
        VolumeIds=[
            volume_id
        ]
    )
    while True:
        time.sleep(45)
        logger.info(f'Volume state...\n{json.dumps(response["VolumesModifications"][0]["ModificationState"], default=json_datetime_serializer, indent=4)}')
        response = client.describe_volumes_modifications(
            VolumeIds=[
                volume_id
            ]
        )
        volume_modification_state = response['VolumesModifications'][0]['ModificationState']
        
        if volume_modification_state == 'optimizing':
            logger.info('Volume is being optimized...')
        elif volume_modification_state == 'completed':
            logger.info('Volume has been optimized...')
            break
        else:
            logger.info('Volume is being modified...')

modify_volume = check_modification_state(modify_volumes('i-0f606e1b556bc9a57'))


logger.info(f'Volume description...\n{json.dumps(modify_volume, default=json_datetime_serializer, indent=4)}')
# logger.info(f'Volume state...\n{json.dumps(volume_state, default=json_datetime_serializer, indent=4)}')
