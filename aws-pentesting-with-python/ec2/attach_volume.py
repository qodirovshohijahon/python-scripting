import boto3
import json
import logging
import os
import botocore
import time
from json_datetime_serializer import json_datetime_serializer
from describe_ec2_instances import describe_instances
from create_volume import create_volume

logger = logging.getLogger()
logging.basicConfig(level=logging.INFO,
                    format='%(asctime)s: %(levelname)s: %(message)s')


# Stopping the instance using stop_instances.
def attach_volume(instance_id, volume_id):
    client = boto3.client('ec2')
    # volume_id = create_volume(instance_id)
    response = client.attach_volume(
       VolumeId=volume_id,
       InstanceId=instance_id,
       Device='/dev/sda1'
    )
    attached_volume_id = response['VolumeId']
    logger.info(f'Attaching volume with volume-id: {attached_volume_id}')
    logger.info('Now Sleep time....')
    time.sleep(60)     
    client.describe_volumes(VolumeIds=[attached_volume_id])
    if client.describe_volumes(VolumeIds=[attached_volume_id])['Volumes'][0]['State'] == 'in-use':
        # response['State'] == 'attached':
        logger.info(f'Volume successfully attached volume-id: {attached_volume_id}')      
    else:
        logger.info('Volume not attached...')
    return attached_volume_id
    
if __name__ == '__main__':
    logger.info('Attaching volume function......!')
    instance_id = 'i-0db03d4defe2f29c3' 
    # = input('Enter an instance id: ')   
    volume_id = 'vol-0fa8677c2d6ac13e7'
    # input('Enter an volume id: ')
    volume = attach_volume(instance_id, volume_id)
    logger.info('Attaching Volume to EC2 instance...')
    logger.info(
        f'Attaching Volume details: {json.dumps(volume, indent=4, default=json_datetime_serializer)}'
    )
    logger.info('Volume Successfully attached!!!')
    
        
        


