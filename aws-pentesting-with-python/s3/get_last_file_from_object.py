import boto3
import logging
import json
import botocore
from pyparsing import delimited_list
from json_datetime_serializer import json_datetime_serializer
import csv
from zipfile import ZipFile
import zipfile
import os
from botocore.exceptions import ClientError


logger = logging.getLogger()
logging.basicConfig(level=logging.INFO,
                    format='%(asctime)s: %(levelname)s: %(message)s')


def get_last_file_from_object(bucket, object_name):
    s3_client = boto3.client('s3')
    
    logger.info(f'object name: {object_name}')
    if object_name == 'Guardduty':
        try:
            response = s3_client.list_objects_v2(Bucket=bucket, Prefix=object_name)
            contents = response['Contents']
            keys = [content['Key'] for content in contents]
            delimited_name = keys[-1].split('/')
            splitted_name = delimited_name[1].split('.')
            data = splitted_name[0]
            edited_data = int(data) + 1
            return str(edited_data)+'.zip'
        except ClientError as e:
            logging.error(e)
            return False


logger.info('Uploading object into bucket ...')
# export_csv_file('323412dds32e3', 'demo@gmail.com')
upload_file = get_last_file_from_object('demo32323ff334', 'Guardduty')
# bucket = export_csv_file('323412dds32e3', 'demo@gmail.com')
logger.info(
    f'File contents: {json.dumps(upload_file, indent=4, default=json_datetime_serializer)}'
)
logger.info('Done!')