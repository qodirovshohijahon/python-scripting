import boto3
import logging
import json
import botocore
from json_datetime_serializer import json_datetime_serializer
import csv
from zipfile import ZipFile
import zipfile
import os
from botocore.exceptions import ClientError


logger = logging.getLogger()
logging.basicConfig(level=logging.INFO,
                    format='%(asctime)s: %(levelname)s: %(message)s')


def upload_file_to_s3(file_name, bucket, object_name):
    s3_client = boto3.client('s3')
    logger.info(f'object name: {object_name}')
    if object_name == 'Guardduty':
        try:
            response = s3_client.upload_file(file_name, bucket, object_name)
            logger.info(f'Uploading::::{response}')
        except ClientError as e:
            logging.error(e)
        return False
    return True


logger.info('Uploading object into bucket ...')
# export_csv_file('323412dds32e3', 'demo@gmail.com')
upload_file = upload_file_to_s3('./json_datetime_serializer.py', 'demo32323ff334', 'Guardduty')
# bucket = export_csv_file('323412dds32e3', 'demo@gmail.com')
logger.info(
    f'File contents: {json.dumps(upload_file, indent=4, default=json_datetime_serializer)}'
)
logger.info('Done!')