from sys import float_repr_style
import time
import boto3
import logging
import json
from json_datetime_serializer import json_datetime_serializer
import csv
import pandas as pd
from zipfile import ZipFile
from make_zip_file import make_zipfile
from get_last_file_from_object import get_last_file_from_object

logger = logging.getLogger()
logging.basicConfig(level=logging.INFO,
                    format='%(asctime)s: %(levelname)s: %(message)s')


def zip_csv_file(file_name, file):
    # zipped = ZipFile(file, 'w')
    with ZipFile(file_name,'w') as zip:
        zip.write(file)


def export_csv_file(account_id, email):
    file = open('accounts_gb.csv', 'w')
    writer = csv.writer(file)
    writer.writerow([account_id, email])
    file.close()
    time.sleep(3)
    files_array = ['accounts_gb.csv', 'cfnresponse.py', 'enableguardduty.py']
    if make_zipfile(get_last_file_from_object('demo32323ff334', 'Guardduty'), './', files_array):
        logger.info('Successfully created zip file')
    else:
        logger.info('Failed to create zip file')
     
    # return file
        
logger.info('Exporting object into file ...')
export_csv_file('323412dds32e3', 'demo@gmail.com')
# bucket = export_csv_file('323412dds32e3', 'demo@gmail.com')
# logger.info(
#     f'File contents: {json.dumps(bucket, indent=4, default=json_datetime_serializer)}'
# )
logger.info('Done!')
