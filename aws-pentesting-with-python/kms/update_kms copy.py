#!/usr/bin/env python3

import boto3
import json
import sys
import os
import pprint
import boto3
from describe_kms import json_datetime_serializer
# declare env var for aws-shell

session = boto3.Session(profile_name='k8s-user')


client = boto3.client('sts',
                      aws_access_key_id='', 
                      aws_secret_access_key='    ', 
                      region_name='eu-central-1')
   
def get_account_num():
    response = client.get_caller_identity()
    return response['Arn']

def updateKMS(key_id, alias):
    """Retrieve an existing KMS CMK based on its description"""
    kms_client = boto3.client('kms',
                      aws_access_key_id='', 
                      aws_secret_access_key='', 
                      region_name='eu-central-1')

    # Update the KMS key policy with new policy and alias name and key id
    get_account_num()
    # print(get_account_num())
    response = kms_client.put_key_policy(
        KeyId=key_id,
        Policy = """{
            "Version": "2012-10-17",
            "Id": "custom-policy-2016-12-07",
            "Statement": [
                {
                    "Sid": "Enable IAM policies",
                    "Effect": "Allow",
                    "Principal": {
                        "AWS": "arn:aws:iam::632660066814:root"
                    },
                    "Action": "kms:*",
                    "Resource": "*"
                },
                {
                    "Sid": "Enable IAM policies",
                    "Effect": "Allow",
                    "Principal": {
                        "AWS": `${get_account_num()}`' # need to refacor this line
                    },
                    "Action": [
                        "kms:Encrypt*",
                        "kms:GenerateDataKey*",
                        "kms:Decrypt*",
                        "kms:DescribeKey*",
                        "kms:ReEncrypt*"
                    ],
                    "Resource": "*"
                } 
            ]
        }""",
        PolicyName='default',
    )
    
    # # updated_kms = kms_client.describe_key(KeyId=key_id)
    # return response


print(updateKMS('dcce385c-709c-4952-80e6-d491f37950d9', 'test'))

